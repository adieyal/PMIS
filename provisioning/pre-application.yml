---
- hosts: vagrant
  gather_facts: no
  connection: paramiko
  user: vagrant
  sudo: yes
  tasks:
  - fireball: port=5099

- hosts: vagrant
  gather_facts: no
  connection: fireball
  vars:
    password: $1$SomeSalt$xg7BaTdMtPm8RHKM70Veb0
  tasks:
  - apt: update_cache=yes
  - apt: pkg=$item
    with_items:
      - git
      - rsync
      - ack-grep
      - virtualenvwrapper
      - memcached
      - mysql-server
      - libmysqlclient-dev
      - supervisor
      - nginx

  - user: name=pmis password=$password groups=admin append=yes comment="PMIS Pseudouser" generate_ssh_key=yes shell=/bin/bash

  # Copy across prepared .ssh folder, which includes my public key.
  # Add yours to templates/ssh/authorized_keys before provisioning.
  - copy: src=templates/ssh/authorized_keys dest=/home/pmis/.ssh/authorized_keys owner=pmis group=pmis mode=0600
  - local_action: command rsync -r templates/ssh/ pmis@$inventory_hostname:.ssh

  # Needed otherise SSH won't recognize authorized_keys
  - command: chmod g-w /home/pmis

  # Required for mysql_* modules
  - command: easy_install -U distribute
  - pip: name=MySQL-python

  # Secure root login for mysql
  - mysql_user: name=root password=pass

  # Create a .my.cnf file for user to be able to login automatically
  - copy: src=templates/my.cnf dest=/home/vagrant/.my.cnf owner=vagrant group=vagrant mode=0600
  - copy: src=templates/my.cnf dest=/root/.my.cnf owner=root group=root mode=0600

  # Now create the PMIS user and DB since we know the root password
  - mysql_db: name=pmis_production
  - mysql_user: name=pmis password=pass priv=pmis_production.*:ALL
